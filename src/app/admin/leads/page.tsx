"use client";import { useState, useEffect } from "react";import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card-new";import { Button } from "@/components/ui/button-new";import { Mail, Download as DownloadIcon } from "lucide-react";interface Lead {  email: string;  count: number;}export default function LeadsPage() {  const [leads, setLeads] = useState<Lead[]>([]);  const [loading, setLoading] = useState(true);  useEffect(() => {    fetchLeads();  }, []);  const fetchLeads = async () => {    setLoading(true);    try {      const response = await fetch("/api/admin/leads");      if (response.ok) {        const data = await response.json();        setLeads(data);      }    } catch (error) {      console.error("Error fetching leads:", error);    } finally {      setLoading(false);    }  };  const handleDownloadCSV = () => {    const csvContent = "data:text/csv;charset=utf-8,"       + leads.map(e => e.email).join("\n");    const encodedUri = encodeURI(csvContent);    const link = document.createElement("a");    link.setAttribute("href", encodedUri);    link.setAttribute("download", "leads.csv");    document.body.appendChild(link);    link.click();    document.body.removeChild(link);  };  if (loading) {    return (      <div className="p-8 space-y-6">        <Card className="animate-pulse">          <CardHeader>            <div className="h-6 bg-gray-200 rounded w-1/2 mb-2"></div>          </CardHeader>          <CardContent>            <div className="space-y-4">              {[1, 2, 3, 4, 5].map((j) => (                <div key={j} className="h-12 bg-gray-100 rounded"></div>              ))}            </div>          </CardContent>        </Card>      </div>    );  }  return (    <div className="p-8 space-y-6">      <Card>        <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">          <CardTitle className="text-2xl font-bold">Leads</CardTitle>          <Button onClick={handleDownloadCSV} disabled={leads.length === 0}>            <DownloadIcon className="h-4 w-4 mr-2" />            CSV Export          </Button>        </CardHeader>        <CardContent>          {leads.length === 0 ? (            <p className="text-gray-500 text-center">Keine Leads gefunden.</p>          ) : (            <div className="space-y-3">              {leads.map((lead, index) => (                <div key={index} className="flex items-center justify-between p-3 rounded-lg bg-gray-50 hover:bg-gray-100 transition-colors">                  <div className="flex items-center space-x-3">                    <Mail className="h-4 w-4 text-gray-400" />                    <p className="text-sm font-medium text-gray-800">{lead.email}</p>                  </div>                  <span className="text-xs text-gray-500">({lead.count} Analysen)</span>                </div>              ))}            </div>          )}        </CardContent>      </Card>    </div>  );}